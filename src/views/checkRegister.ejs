<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="utf-8">
      <meta name="description" content="New web page">
      <meta name="keyword" content="keyword">
      <meta name="lenguage" content="ES">
      <meta name="author" content="exdesy.design@gmail.com">
      <meta name="robots" content="index.follow">
      <meta name="revised" content="Day, Month, Date, Year, Time">
      <meta name="vierport" content="width=device=width, initial scale=1.0">
      <meta http-equiv="X-UA-Compatible" content="IE-edge, chrome1">

      <title>DELETE</title>
      <link rel="shortcut icon" href="resourses/lib/img/logo.ico">
      <!-- ------------------------------  LIBRARY  ------------------------------ -->

      <!-- ------------------------------  STYLES  ------------------------------ -->
      <link href="resourses/css/index.css" rel="stylesheet" type="text/css"/>
      <link href="resourses/css/checkRegister.css" rel="stylesheet" type="text/css"/>
      <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    </head>
    <body>
      <div class="wrapper">
        <header class="header">
          <div class="header-title">
            <a class="title-img" href="/home"><img src="resourses/lib/img/logo.png"/></a>
            <h1 class="title-text">GENERICS <span>Gestion Generica</span></h1>
          </div>
          <nav class="header-nav">
            <div class="nav-menu">
              <a class="menu-text" onclick="showContent('create')">CREAR</a></li>
              <a class="menu-text" onclick="showContent('edit')">MODIFICAR</a></li>
              <a class="menu-text" onclick="showContent('delete')">ELIMINAR</a></li>
              <a class="menu-text" href="/consult">CONSULTAR</a></li>
              <a class="menu-text" href="/checkRegister">Aprobar Registro</a></li>
            </div>
          </nav>
        </header>
          <div class="content">
            <main>
                <div class="card-container">
                
                </div>
            </main>
          </div>
          <footer>
          <div class="footer">
            <div class="copyright">
            </div>
          </div>
        </footer>
      </div>
      <script>
        window.addEventListener('DOMContentLoaded', async () => {
            try {
                const response = await fetch('/getUserRegister', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
    
                if (!response.ok) {
                    throw new Error('Error al obtener los datos del usuario');
                }
    
                const userDataArray = await response.json();
    
                if (userDataArray.length > 0) {
                    const dataContainer = document.querySelector('.card-container');
    
                    dataContainer.innerHTML = '';
    
                    userDataArray.forEach(userData => {
                        const card = document.createElement('div');
                        card.classList.add('card');
    
                        card.innerHTML = `
                            <div class="icon">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="data">
                                <p id="name" class="heading">${userData.nombre} ${userData.apellidos}</p>
                                <p class="heading" id="correo">${userData.correo}</p>             
                            </div>
                            <div class="buttons">
                              <button type="button" id="true" class="btn btn-info btn-circle btn-lg"><i class="fas fa-check"></i></button>
                              <button type="button" id="false" class="btn btn-warning btn-circle btn-lg"><i class="fas fa-times"></i></button>
                            </div>
                        `;
                        dataContainer.appendChild(card);
    
                        // Agregar evento de clic al botón con id "true"
                    const approveButton = card.querySelector('#true');
                    approveButton.addEventListener('click', () => {
                        // Llamar a la función para aprobar el usuario
                        checkRegister(userData.correo);
                    });

                    // Agregar evento de clic al botón con id "false"
                    const deleteButton = card.querySelector('#false');
                    deleteButton.addEventListener('click', () => {
                        // Llamar a la función para eliminar el usuario
                        deleteUser(userData.correo);
                    });
                });
            } else {
                alert('No hay solicitudes de registros');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
        // Función para aprobar un usuario
    async function checkRegister(email) {
        try {
            const response = await fetch('/checkRegister', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email: email }) // Pasar el correo del usuario a aprobar
            });

            if (!response.ok) {
                throw new Error('Error al aprobar el usuario');
            }

            // Recargar la página después de aprobar el usuario
            location.reload();
        } catch (error) {
            console.error('Error al aprobar el usuario:', error);
            // Manejar el error según sea necesario
        }
    }
    
        // Función para eliminar un usuario
        async function deleteUser(email) {
            try {
                const response = await fetch('/deleteUser', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: email }) // Pasar el correo del usuario a eliminar
                });
    
                if (!response.ok) {
                    throw new Error('Error al eliminar el usuario');
                }
    
                // Recargar la página después de eliminar el usuario
                location.reload();
            } catch (error) {
                console.error('Error al eliminar el usuario:', error);
                // Manejar el error según sea necesario
            }
        }
    </script>
  </body>
</html>
<!-- Carta aviso cancelar registro
    HTML
<div class="card">
  <div class="header">
    <div class="image"><svg aria-hidden="true" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24" fill="none">
                <path d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" stroke-linejoin="round" stroke-linecap="round"></path>
              </svg></div>
    <div class="content">
       <span class="title">Desactivate account</span>
       <p class="message">Are you sure you want to deactivate your account? All of your data will be permanently removed. This action cannot be undone.</p>
    </div>
     <div class="actions">
       <button class="desactivate" type="button">Desactivate</button>
       <button class="cancel" type="button">Cancel</button>
    </div>
  </div>
  </div>

  CSS
  .card {
  overflow: hidden;
  position: relative;
  background-color: #ffffff;
  text-align: left;
  border-radius: 0.5rem;
  max-width: 290px;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.header {
  padding: 1.25rem 1rem 1rem 1rem;
  background-color: #ffffff;
}

.image {
  display: flex;
  margin-left: auto;
  margin-right: auto;
  background-color: #FEE2E2;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: 3rem;
  height: 3rem;
  border-radius: 9999px;
}

.image svg {
  color: #DC2626;
  width: 1.5rem;
  height: 1.5rem;
}

.content {
  margin-top: 0.75rem;
  text-align: center;
}

.title {
  color: #111827;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.5rem;
}

.message {
  margin-top: 0.5rem;
  color: #6B7280;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.actions {
  margin: 0.75rem 1rem;
  background-color: #F9FAFB;
}

.desactivate {
  display: inline-flex;
  padding: 0.5rem 1rem;
  background-color: #DC2626;
  color: #ffffff;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 500;
  justify-content: center;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 1px;
  border-color: transparent;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.cancel {
  display: inline-flex;
  margin-top: 0.75rem;
  padding: 0.5rem 1rem;
  background-color: #ffffff;
  color: #374151;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 500;
  justify-content: center;
  width: 100%;
  border-radius: 0.375rem;
  border: 1px solid #D1D5DB;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}
-->